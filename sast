#!/bin/sh
#
#  sast - Simple Assembly Sequence Typing
#  Copyright (C) 2018  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Home: https://github.com/zwets/sast

# Constants
PROGNAME="$(basename "$0")"

# Parameters
PCT_IDENT="100"
PCT_COVER="80"

# Function exits this script with $* on stderr
err_exit() {
    echo "${PROGNAME}: $*" >&2
    exit 1
}

# Function emits $* on stderr if VERBOSE is set
emit() {
    [ -z "$VERBOSE" ] || echo "${PROGNAME}: $*" >&2
}

# Function to show usage information and exit
usage_exit() {
    echo "
Usage: $PROGNAME [OPTIONS] [-t TABLE ...] -a ALLELES ... [-g GENOME ... | -d DB]

  Look for each allele from ALLELES in each GENOME or in all genomes in DB.
  Output a table listing for each genome, for each gene, the allele found,
  or the closest match that meets IDENT and COVER.  For any TABLE specified,
  add a column listing the ST looked up in TABLE by the allele combination
  for its gene profile.

  OPTIONS
  -t, --table TABLE ..  Specify one or more the sequence type mapping TABLEs
  -i, --identity IDENT  Minimum percentage identity (default $PCT_IDENT)
  -c, --coverage COVER  Minimum percentage of allele covered (default $PCT_COVER)
  -m, --multiple        Report all alleles meeting PCT and COV (default 1)
  -x, --extract-genes   Extract the alleles found to a FA
  -d, --db BLASTDB      Instead of GENOME files use BLASTDB as source

  Each ALLELES file must be FASTA, and may list any number of alleles for any
  number of genes.  Each allele must have a sequence header with format
  '>GDN X', where G is the gene name (a sequence of arbitrary characters),
  D is a delimiter (any single non-numeric character), and N is the allele
  number (unique among all alleles for G).  X is optional arbitrary text.

  This convention means that you can use most allele files (e.g. from PubMLST
  or Pasteur) unmodified, as e.g. 'rpoB_1', 'bla_OXA-15', or 'RS31795/1' all
  comply with the format.

  Each GENOME file must be (optionally compressed) FASTA containing assembled
  contigs.  Its file name minus extension is used as the genome identifier in
  $PROGNAME's output.  If your file names are ugly, ln(1) is there for you.
  
  Each TABLE must be a TSV file whose first column gives the ST identifier (any
  string of characters), for the allele number combination in the remaining
  columns.  Its header must specify the gene name corresponding to each column.
  Its first column header (e.g. \"ST\") is used as column header in the output.
" >&2
    exit ${1:-1}
}

# Parse options

err_exit "under construction"

# vim: sts=4:sw=4:et:si:ai
